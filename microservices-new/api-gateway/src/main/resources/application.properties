eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
spring.application.name=api-gateway
logging.level.root=INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
logging.level.org.springframework.cloud.gateway=TRACE

# Product Service Route
spring.cloud.gateway.routes[0].id=product-service
# We can use http://product-service but because api-gateway can also handle client side load balancing
# that is why we have replaced http with lb(for load balancer)
spring.cloud.gateway.routes[0].uri=lb://product-service
# Understand the working of the predicates:-
# - If the url of the request that we make does not match the predicates then it won't work.
# - If the url matches the predicate then the same predicate will be passed on to the actual service(for example, product-service)
# - You need to have the same predicate here as supported by the actual service
# - NOTE: You can change the url that you send to the actual service by using filters(SetPath). check the comments below
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/product

# Order Service Route
spring.cloud.gateway.routes[1].id=order-service
spring.cloud.gateway.routes[1].uri=lb://order-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/order

# Discovery Server Route
spring.cloud.gateway.routes[2].id=discovery-server
spring.cloud.gateway.routes[2].uri=http://localhost:8761
spring.cloud.gateway.routes[2].predicates[0]=Path=/eureka/web
# This filter prevents from sending the predicate's path and sends the filter set path as the actual path to the actual service
spring.cloud.gateway.routes[2].filters[0]=SetPath=/

# Discovery Server Static Resources Route
spring.cloud.gateway.routes[3].id=discovery-server-static
spring.cloud.gateway.routes[3].uri=http://localhost:8761
spring.cloud.gateway.routes[3].predicates[0]=Path=/eureka/**
