spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/order-service
spring.datasource.username=mindfire
spring.datasource.password=mindfire
spring.jpa.hibernate.ddl-auto=update
server.port=8081
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
spring.application.name=order-service

#Actuator properties
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
#feign.circuitbreaker.enabled=true

#Resilience4j properties
# show states - closed, open, half-open
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
# circuit breaker should not change the state to closed right away. It should wait for a specific number of requests to fail before changing the state. Therefore, COUNT_BASED.
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
# circuit breaker will wait for 5 requests to fail before changing the state to closed.
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
# wait for 5 seconds in open state before changing it to half-open state
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true


#Resilience4j timeout properties
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

#Resilience4j retry properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s
